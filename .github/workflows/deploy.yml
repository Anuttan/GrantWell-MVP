name: Deploy Chatbot

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GRANTS_GOV_API_KEY: ${{ secrets.GRANTS_GOV_API_KEY }}
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
      STACK_NAME: ${{ github.ref == 'refs/heads/main' && 'gw-stack-prod' || 'gw-stack-staging' }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ðŸ‘‡ Pick correct role depending on branch
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ github.ref == 'refs/heads/main' && secrets.SERVICE_ROLE_ARN_PROD || secrets.SERVICE_ROLE_ARN_STAGING }}
          role-session-name: ${{ github.actor }}-${{ env.ENVIRONMENT }}
          aws-region: us-east-1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install backend dependencies
        run: npm install

      - name: Install frontend dependencies
        run: |
          cd lib/user-interface/app
          npm install
          npm run build:theme
          npm install -g aws-cdk

      - name: Bootstrap AWS environment
        run: cdk bootstrap

      - name: Deploy CDK stack to ${{ env.ENVIRONMENT }}
        run: cdk deploy ${{ env.STACK_NAME }} --require-approval never

      - name: Fetch CloudFormation Outputs
        run: |
          aws cloudformation describe-stacks \
            --stack-name ${{ env.STACK_NAME }} \
            --query "Stacks[0].Outputs" > stack-outputs-${{ env.ENVIRONMENT }}.json
          cat stack-outputs-${{ env.ENVIRONMENT }}.json

      - name: Upload Outputs as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: stack-outputs-${{ env.ENVIRONMENT }}
          path: stack-outputs-${{ env.ENVIRONMENT }}.json